API 서버 500 에러 디버깅 요청
문제 상황
API: POST /api/auto-call/log
상태: 500 Internal Server Error
에러 메시지: "통화 로그 저장 중 오류가 발생했습니다."전송된 요청 데이터
{
  "customerId": 4,
  "dbId": 4,
  "callResult": "부재중",
  "consultationResult": "부재중",
  "callDuration": "00:00:00"
}
JWT 토큰: 정상 (userId: 2, companyId: 2)확인 사항
1. 서버 콘솔 로그 확인 필요
백엔드 서버 콘솔에서 정확한 에러 메시지를 확인해주세요:console.error("통화 로그 저장 오류:", error);
예상되는 원인:MySQL 연결 오류
테이블/컬럼명 불일치
데이터 타입 불일치
외래키 제약 조건 위반
2. 데이터베이스 테이블 확인
customers 테이블:-- customer_id = 4가 존재하는지 확인
SELECT * FROM customers WHERE customer_id = 4;

-- 컬럼명 확인
SHOW COLUMNS FROM customers;
call_logs 테이블:-- 테이블 구조 확인
SHOW COLUMNS FROM call_logs;

-- 외래키 확인
SHOW CREATE TABLE call_logs;
3. 예상 원인별 해결 방법
원인 1: 컬럼명 불일치
-- customers 테이블 컬럼명이 다를 수 있음
ALTER TABLE customers CHANGE `콜_결과` `call_result` VARCHAR(100);
ALTER TABLE customers CHANGE `상담_결과` `consultation_result` TEXT;
원인 2: call_logs 테이블 없음
-- call_logs 테이블 생성 필요
CREATE TABLE call_logs (
  log_id INT PRIMARY KEY AUTO_INCREMENT,
  user_id INT NOT NULL,
  customer_id INT NOT NULL,
  db_id INT NOT NULL,
  call_datetime DATETIME,
  call_result VARCHAR(100),
  consultation_result TEXT,
  call_duration VARCHAR(20),
  has_audio BOOLEAN DEFAULT FALSE,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (user_id) REFERENCES users(user_id),
  FOREIGN KEY (customer_id) REFERENCES customers(customer_id),
  FOREIGN KEY (db_id) REFERENCES db_lists(db_id)
);
원인 3: userId가 users 테이블에 없음
-- userId = 2가 존재하는지 확인
SELECT * FROM users WHERE user_id = 2;
요청 사항
서버 콘솔 로그 전체 내용 공유 부탁드립니다
데이터베이스 스키마 확인:
customers 테이블 컬럼 목록
call_logs 테이블 존재 여부
MySQL 에러 코드 (있다면)
임시 해결 방법
API 파일에 더 자세한 로그 추가:try {
  console.log("=== 통화 로그 저장 시작 ===");
  console.log("userId:", agent.userId);
  console.log("customerId:", customerId);
  console.log("dbId:", dbId);
  console.log("callResult:", callResult);

  // 1. customers 업데이트
  console.log("customers 테이블 업데이트 중...");
  await connection.query(...);
  console.log("customers 업데이트 성공");

  // 2. call_logs 삽입
  console.log("call_logs 테이블 삽입 중...");
  const [result] = await connection.query<ResultSetHeader>(...);
  console.log("call_logs 삽입 성공, logId:", result.insertId);

} catch (error) {
  console.error("=== 에러 발생 ===");
  console.error("에러 타입:", error.constructor.name);
  console.error("에러 메시지:", error.message);
  console.error("에러 스택:", error.stack);
  console.error("SQL 에러 코드:", error.code);  // MySQL 에러 코드
  console.error("SQL 에러 번호:", error.errno);
}







callup에 메시지 보내기









